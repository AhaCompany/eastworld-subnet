Based on the given environment information, your action logs and available tools, reflect on the rationality and effectiveness of previous actions and output thoughts on the next action to successfully advance your primary tasks.


# Steps:

1. Review Action Log:
Pay special attention to the results of the last action, which is the last record in the log. Summarize key historical actions and identify past successes or failures, noting what tools and functions were used and their outcomes. 

2. Prioritize Tasks:
Review the task list and determine which task has the highest priority based on urgency and dependencies.

3. Analyze Environment Data:
Examine the latest environmental data, including LiDAR scanner readings, location observations, and status updates. Assess any potential obstacles or hazards that could affect task completion. If the LiDAR data indicates a blockage in a particular direction, adjust your route to bypass it, rather than backtracking along the original path.

4. Reflection:
Using insights from your analysis, review previous reflections and plans. Based on the new thoughts and environmental changes, plan your next direct action.

# Guidelines
- Maintain consistency: Build on what worked before, rather than making abrupt or contradictory changes.
- Adhere to constraints: Only use the move_to_target function call when you have the detail location of the target.
- Focus on next action: The output should be concise, clear, and in first-person language, focusing on the next action.
- Plain text output: The output should be in plain text, without any special formatting or characters. 

[Reflection Context]
- Current Quest: {tasks}
- Recent Action Log:
{action_log}
- Blocked Directions (avoid): {blocked_dirs}
- Inventory Full: {inventory_full}
- LiDAR: {lidar}
- Odometry: {odometry}
- Perception: {perception}
- Items: {items}
- Tools: {tool_list}

[Instructions]
1. Carefully review the most recent actions and feedback. If you notice repeated failures (e.g., inventory is full, target is too far, path is blocked), clearly analyze the root cause for each failure.
2. If the last action failed because the inventory was full and you tried to collect, propose dropping a low-value item or moving to a storage area before collecting again.
3. If the last inspect or talk_to action failed because the target was too far, propose moving closer to the target before repeating the action.
4. If a move_in_direction action failed because the path was blocked, propose an alternative direction or an intermediate step to find a new route.
5. If you encounter multiple consecutive failures, proactively change your strategy and avoid repeating unsuccessful actions.
6. Always prioritize actions that move you closer to completing the quest, even if it requires an intermediate step such as dropping items, moving, or re-examining the environment.
7. Your reflection must always provide a concrete solution or plan of action, not just general observations.

8. For each failure in the recent action log, explicitly state the root cause (e.g., 'inspect failed because Battery Pack is not in sight', 'collect failed because inventory is full', 'move failed because path is blocked').
9. If the same failure occurs more than once, do not repeat that action until the underlying condition has changed (e.g., do not try to collect when inventory is still full).
10. Always propose a specific adjustment or intermediate step to resolve the failure, such as moving closer to a target, dropping an item, or choosing a new direction. If no direct action is possible, recommend an exploratory or information-gathering step.
11. End your reflection with a clear, actionable plan that addresses the most recent obstacles and advances the quest.

Your reflection must be actionable, focused on quest progress, and leverage all recent experience and environmental data.

# Tasks and Priorities
{tasks}

# LiDAR Data
{lidar}

# Odometry Data
{odometry}

# Environment Perception
{perception}

# Items in Inventory
{items}

# Available Actions
{tool_list}

# Previous Reflection and Plan
<<<
{reflection}
>>>

# History Action Log
<<<
{action_log}
>>>
